{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponenet.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","console","log","JSON","stringify","alert","postComment","dishId","rating","author","comment","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","Component","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","email","telnum","agree","contactType","message","resetFeedbackForm","role","size","offset","checkbox","RenderLeader","Media","left","object","body","heading","About","leaders","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","addLeaders","newFeedback","res","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iSAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCLCC,EAAU,8DCKvB,SAASC,EAAT,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAiB,EAAXC,QAE5B,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAE,gBAAWH,EAAKI,KAEpB,kBAACC,EAAA,EAAD,CAASC,MAAM,OAAOC,IAAKT,EAAUE,EAAKQ,MAAOC,IAAKT,EAAKU,OAC3D,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYZ,EAAKU,SAOrC,IAkDeG,EAlDF,SAACC,GACV,IAAMC,EAAOD,EAAME,OAAOA,OAAOC,KAAI,SAACjB,GAClC,OACI,yBAAKkB,IAAKlB,EAAKI,GAAIP,UAAU,wBACzB,kBAACE,EAAD,CAAgBC,KAAMA,QAKlC,OAAIc,EAAME,OAAOG,UAET,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPiB,EAAME,OAAOI,QAEd,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKiB,EAAME,OAAOI,YAS9B,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEJ,yBAAK1B,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACVkB,K,wGCzDfS,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAGhDC,EAAb,kDACI,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAEDgB,MAAQ,CACTC,aAAa,GAGjB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARL,EADvB,0DAaQE,KAAKC,SAAS,CAAEL,aAAcI,KAAKL,MAAMC,gBAbjD,mCAgBiBM,GACTF,KAAKH,cACLM,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUJ,IAClDK,MAAM,qBAAuBF,KAAKC,UAAUJ,IAC5CF,KAAKrB,MAAM6B,YAAYR,KAAKrB,MAAM8B,OAAQP,EAAOQ,OAAQR,EAAOS,OAAQT,EAAOU,WApBvF,+BAuBc,IAzBKnB,EAyBN,OACL,OACI,6BACI,kBAACoB,EAAA,EAAD,CAAQC,SAAO,EAAChD,QAASkC,KAAKH,aAC1B,0BAAMnC,UAAU,sBAAhB,oBAGJ,yBAAKA,UAAU,mBACX,kBAACqD,EAAA,EAAD,CAAOC,OAAQhB,KAAKL,MAAMC,YAAaqB,OAAQjB,KAAKH,aAChD,kBAACqB,EAAA,EAAD,CAAaD,OAAQjB,KAAKH,aAA1B,mBACA,kBAACsB,EAAA,EAAD,KACI,yBAAKzD,UAAU,UACX,kBAAC,YAAD,CAAW0D,SAAU,SAAClB,GAAD,OAAY,EAAKH,aAAaG,KAC/C,kBAACmB,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,UACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQE,OAAT,CAAgBC,MAAM,UAAUpD,KAAK,SAASb,UAAU,gBACpD,qCACA,qCACA,qCACA,qCACA,wCAKZ,kBAAC2D,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,IAA5B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,UAAU1D,GAAG,SAASM,KAAK,SAASsD,YAAY,YAAYnE,UAAU,eAAeoE,WAAY,CAAEzC,WAAU0C,WAtD1JtC,EAsD+K,EAtDvK,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAsD4ID,UAAWA,EAAU,OAC/K,kBAAC,SAAD,CAAQ9B,UAAU,cAAciE,MAAM,UAAUK,KAAK,UAAUC,SAAU,CAAE5C,SAAU,WAAY0C,UAAW,oCAAqCvC,UAAW,oCAIpK,kBAAC6B,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,IAA9B,WACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQU,SAAT,CAAkBP,MAAM,WAAW1D,GAAG,UAAUM,KAAK,UAAU4D,KAAK,IAAIzE,UAAU,eAAeoE,WAAY,CAAEzC,cAC/G,kBAAC,SAAD,CAAQ3B,UAAU,cAAciE,MAAM,WAAWK,KAAK,UAAUC,SAAU,CAAE5C,SAAU,gBAI9F,kBAACwB,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAASC,MAAM,WAA3C,oBAjEpC,GAAiCC,aA4EjC,SAASC,EAAT,GAA+B,IAAT3E,EAAQ,EAARA,KAClB,OAAY,MAARA,EAEI,yBAAKH,UAAU,uBACX,kBAAC,gBAAD,CACI+E,IAAE,EACFC,eAAgB,CACZC,cAAe,gCAEnB,kBAAC5E,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAAS0E,KAAG,EAACxE,IAAKT,EAAUE,EAAKQ,MAAOC,IAAKT,EAAKU,OAClD,kBAACsE,EAAA,EAAD,KACI,kBAACpE,EAAA,EAAD,KAAYZ,EAAKU,MACjB,kBAACuE,EAAA,EAAD,KAAWjF,EAAKkF,iBAShC,8BAKZ,SAASC,EAAT,GAA4D,IAAlCC,EAAiC,EAAjCA,SAAUzC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC7C,OAAgB,MAAZwC,EAEI,8BAMJ,yBAAKvF,UAAU,uBACX,yCACA,wBAAIA,UAAU,iBACV,kBAAC,UAAD,CAAS+E,IAAE,GACNQ,EAASnE,KAAI,SAAC8B,GACX,OACI,kBAAC,OAAD,CAAM6B,IAAE,GACJ,wBAAI1D,IAAK6B,EAAQ3C,IACb,2BAAI2C,EAAQA,SACZ,iCAAOA,EAAQD,OAAf,MAA0B,IAAIuC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAaC,OAAO,IAAIC,KAAKA,KAAKC,MAAM7C,EAAQ8C,gBAO3K,kBAAC,EAAD,CAAajD,OAAQA,EAAQD,YAAaA,KAMtD,IAkDemD,EAlDI,SAAChF,GAGhB,OAAY,MAFCA,EAAMd,KAIX,8BAEGc,EAAMK,UAET,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPiB,EAAMM,QAEP,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKiB,EAAMM,WAKJ,MAAdN,EAAMd,KAEP,yBAAKH,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAET,EAAMd,KAAKU,OAEvC,yBAAKb,UAAU,UACX,4BAAKiB,EAAMd,KAAKU,MAChB,+BAGR,yBAAKb,UAAU,OACX,kBAAC8E,EAAD,CAAY3E,KAAMc,EAAMd,OACxB,kBAACmF,EAAD,CAAgBC,SAAUtE,EAAMsE,SAC5BzC,YAAa7B,EAAM6B,YACnBC,OAAQ9B,EAAMd,KAAKI,YAlBlC,G,0FCpDM2F,E,kDAjHX,WAAYjF,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTkE,WAAW,EACXjE,aAAa,GAEjB,EAAKkE,UAAY,EAAKA,UAAUhE,KAAf,gBACjB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKiE,YAAc,EAAKA,YAAYjE,KAAjB,gBARJ,E,wDAYfE,KAAKC,SAAS,CACV4D,WAAY7D,KAAKL,MAAMkE,c,oCAK3B7D,KAAKC,SAAS,CACVL,aAAcI,KAAKL,MAAMC,gB,kCAIrBoE,GACRhE,KAAKH,cACLU,MAAM,aAAeP,KAAKiE,SAAS5B,MAC/B,aAAerC,KAAKkE,SAAS7B,MAC7B,aAAerC,KAAKmE,SAASC,SACjCJ,EAAMK,mB,+BAGA,IAAD,OACL,OACI,oCACI,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAK9G,UAAU,aACX,kBAAC+G,EAAA,EAAD,CAAe3G,QAASkC,KAAK8D,YAC7B,kBAACY,EAAA,EAAD,CAAahH,UAAU,UAAUiH,KAAK,KAClC,yBAAKvG,IAAI,yBAAyBwG,OAAO,KAAKzG,MAAM,KAAKG,IAAI,2BAEjE,kBAACuG,EAAA,EAAD,CAAU7D,OAAQhB,KAAK6D,UAAWiB,QAAM,GACpC,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACP,kBAACE,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAWM,GAAG,SAC7B,0BAAMN,UAAU,qBADpB,UAIJ,kBAACsH,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAWM,GAAG,YAC7B,0BAAMN,UAAU,qBADpB,cAIJ,kBAACsH,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAWM,GAAG,SAC7B,0BAAMN,UAAU,qBADpB,UAIJ,kBAACsH,EAAA,EAAD,KACI,kBAAC,IAAD,CAAStH,UAAU,WAAWM,GAAG,cAC7B,0BAAMN,UAAU,6BADpB,iBAKR,kBAACqH,EAAA,EAAD,CAAKrH,UAAU,UAAUoH,QAAM,GAC3B,kBAACE,EAAA,EAAD,KACI,kBAACnE,EAAA,EAAD,CAAQC,SAAO,EAAChD,QAASkC,KAAKH,aAC1B,0BAAMnC,UAAU,wBADpB,cAQpB,kBAACuH,EAAA,EAAD,KACI,yBAAKvH,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,sDACA,kLAKhB,kBAACqD,EAAA,EAAD,CAAOC,OAAQhB,KAAKL,MAAMC,YAAaqB,OAAQjB,KAAKH,aAChD,kBAACqB,EAAA,EAAD,CAAaD,OAAQjB,KAAKH,aAA1B,SACA,kBAACsB,EAAA,EAAD,KACI,kBAAC+D,EAAA,EAAD,CAAM9D,SAAUpB,KAAK+D,aACjB,kBAACoB,EAAA,EAAD,KACI,kBAAC7D,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC6D,EAAA,EAAD,CAAOhD,KAAK,OAAOnE,GAAG,WAAWM,KAAK,WAClC8G,SAAU,SAACC,GAAD,OAAW,EAAKrB,SAAWqB,MAE7C,kBAACH,EAAA,EAAD,KACI,kBAAC7D,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC6D,EAAA,EAAD,CAAOhD,KAAK,WAAWnE,GAAG,WAAWM,KAAK,WACtC8G,SAAU,SAACC,GAAD,OAAW,EAAKpB,SAAWoB,MAE7C,kBAACH,EAAA,EAAD,CAAWI,OAAK,GACZ,kBAACjE,EAAA,EAAD,CAAOiE,OAAK,GACR,kBAACH,EAAA,EAAD,CAAOhD,KAAK,WAAW7D,KAAK,WACxB8G,SAAU,SAACC,GAAD,OAAW,EAAKnB,SAAWmB,KAF7C,gBAMJ,kBAACzE,EAAA,EAAD,CAAQuB,KAAK,SAASC,MAAM,SAASC,MAAM,WAA3C,iB,GA1GPC,aC8CNiD,MA/Cf,SAAgB7G,GACZ,OACI,yBAAKjB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMM,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,cAGZ,yBAAKN,UAAU,kBACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,sBAJjB,mBAIyD,6BACrD,uBAAGA,UAAU,oBALjB,mBAKuD,6BACnD,uBAAGA,UAAU,yBANjB,KAM8C,uBAAGiH,KAAK,6BAAR,wBAIlD,yBAAKjH,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCiH,KAAK,uBAAsB,uBAAGjH,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCiH,KAAK,2CAA0C,uBAAGjH,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCiH,KAAK,+BAA8B,uBAAGjH,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCiH,KAAK,uBAAsB,uBAAGjH,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCiH,KAAK,uBAAsB,uBAAGjH,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBiH,KAAK,WAAU,uBAAGjH,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,SCrCxB,SAAS+H,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,KAAM1G,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACnC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKL,kBAAC,gBAAD,CAAewD,IAAE,EAACC,eAAgB,CAC9BC,cAAe,gCAEf,kBAAC5E,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAASE,IAAKT,EAAU+H,EAAKrH,MAAOC,IAAKoH,EAAKnH,OAC9C,kBAACsE,EAAA,EAAD,KACI,kBAACpE,EAAA,EAAD,KAAYiH,EAAKnH,MAChBmH,EAAKC,YAAc,kBAACC,EAAA,EAAD,KAAeF,EAAKC,aAA8B,KACtE,kBAAC7C,EAAA,EAAD,KAAW4C,EAAK3C,gBAmCzB8C,OA3Bf,SAAclH,GACV,OACI,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAAC+H,EAAD,CAAYC,KAAM/G,EAAMd,KACpBmB,UAAWL,EAAMmH,cACjB7G,QAASN,EAAMoH,iBAGvB,yBAAKrI,UAAU,qBACX,kBAAC+H,EAAD,CAAYC,KAAM/G,EAAMqH,UACpBhH,UAAWL,EAAMsH,aACjBhH,QAASN,EAAMuH,gBAGvB,yBAAKxI,UAAU,qBACX,kBAAC+H,EAAD,CAAYC,KAAM/G,EAAMwH,OACpBnH,UAAWL,EAAMyH,eACjBnH,QAASN,EAAM0H,qBChDjChH,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDsC,GAAY,SAACtC,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpD6G,GAAW,SAAChH,GAAD,OAAUiH,MAAMC,OAAOlH,KAClCmH,GAAa,SAACnH,GAAD,MAAS,4CAA4CoH,KAAKpH,IAmM9DqH,G,kDA/LX,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IAEDoB,aAAe,EAAKA,aAAaD,KAAlB,gBAHL,E,yDAMNI,GACTC,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUJ,IAClDK,MAAM,qBAAuBF,KAAKC,UAAUJ,IAC5CF,KAAKrB,MAAMiI,aAAa1G,EAAO2G,UAAW3G,EAAO4G,SAAU5G,EAAO6G,MAAO7G,EAAO8G,OAAQ9G,EAAO+G,MAAO/G,EAAOgH,YAAahH,EAAOiH,SACjInH,KAAKrB,MAAMyI,sB,+BAIL,IAAD,OAEL,OACI,yBAAK1J,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,eAEJ,yBAAK1B,UAAU,UACX,0CACA,8BAEJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,+BACX,2CACA,6DAC6B,6BAD7B,2BAE4B,6BAF5B,YAGa,6BACT,uBAAGA,UAAU,gBAJjB,mBAImD,6BAC/C,uBAAGA,UAAU,cALjB,mBAKiD,6BAC7C,uBAAGA,UAAU,mBANjB,KAMwC,uBAAGiH,KAAK,6BAAR,wBAG5C,yBAAKjH,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY2J,KAAK,SAC5B,uBAAGA,KAAK,SAAS3J,UAAU,kBAAkBiH,KAAK,oBAAmB,uBAAGjH,UAAU,gBAAlF,SACA,uBAAG2J,KAAK,SAAS3J,UAAU,eAAeiH,KAAK,KAAI,uBAAGjH,UAAU,gBAAhE,UACA,uBAAG2J,KAAK,SAAS3J,UAAU,kBAAkBiH,KAAK,6BAA4B,uBAAGjH,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,oBACX,kBAAC,OAAD,CAAMiE,MAAM,WAAWP,SAAU,SAAClB,GAAD,OAAY,EAAKH,aAAaG,KAC3D,kBAACmB,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,aAAa1D,GAAG,YAAYM,KAAK,YACjDsD,YAAY,aACZnE,UAAU,eACVoE,WAAY,CACRzC,YAAU0C,UAAWA,GAAU,GAAIvC,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACI9B,UAAU,cACViE,MAAM,aACNK,KAAK,UACLC,SAAU,CACN5C,SAAU,WACV0C,UAAW,oCACXvC,UAAW,qCAK3B,kBAAC6B,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,YAAY1D,GAAG,WAAWM,KAAK,WAC/CsD,YAAY,YACZnE,UAAU,eACVoE,WAAY,CACRzC,YAAU0C,UAAWA,GAAU,GAAIvC,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACI9B,UAAU,cACViE,MAAM,YACNK,KAAK,UACLC,SAAU,CACN5C,SAAU,WACV0C,UAAW,oCACXvC,UAAW,qCAK3B,kBAAC6B,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,UAAU1D,GAAG,SAASM,KAAK,SAC3CsD,YAAY,cACZnE,UAAU,eACVoE,WAAY,CACRzC,YAAU0C,UAAWA,GAAU,GAAIvC,UAAWA,GAAU,IAAK8G,eAGrE,kBAAC,SAAD,CACI5I,UAAU,cACViE,MAAM,UACNK,KAAK,UACLC,SAAU,CACN5C,SAAU,WACV0C,UAAW,iCACXvC,UAAW,6BACX8G,SAAU,wBAK1B,kBAACjF,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQI,KAAT,CAAcD,MAAM,SAAS1D,GAAG,QAAQM,KAAK,QACzCsD,YAAY,QACZnE,UAAU,eACVoE,WAAY,CACRzC,YAAUoH,iBAGlB,kBAAC,SAAD,CACI/I,UAAU,cACViE,MAAM,SACNK,KAAK,UACLC,SAAU,CACN5C,SAAU,WACVoH,WAAY,6BAK5B,kBAACpF,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC+D,EAAA,EAAD,CAAKD,GAAI,CAAE8F,KAAM,EAAGC,OAAQ,IACxB,yBAAK7J,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOiE,OAAK,GACR,kBAAC,UAAQiC,SAAT,CAAkB7F,MAAM,SAASpD,KAAK,QAClCb,UAAU,qBAFlB,IAGQ,IACJ,0DAIZ,kBAAC+D,EAAA,EAAD,CAAKD,GAAI,CAAE8F,KAAM,EAAGC,OAAQ,IACxB,kBAAC,UAAQ7F,OAAT,CAAgBC,MAAM,eAAepD,KAAK,cACtCb,UAAU,gBACV,wCACA,4CAIZ,kBAAC2D,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC4D,EAAA,EAAD,CAAOC,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAACC,EAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQU,SAAT,CAAkBP,MAAM,WAAW1D,GAAG,UAAUM,KAAK,UACjD4D,KAAK,KACLzE,UAAU,mBAGtB,kBAAC2D,EAAA,EAAD,CAAK3D,UAAU,cACX,kBAAC+D,EAAA,EAAD,CAAKD,GAAI,CAAE8F,KAAM,GAAIC,OAAQ,IACzB,kBAAC1G,EAAA,EAAD,CAAQuB,KAAK,SAASE,MAAM,WAA5B,4B,GAlLlBC,a,6BCLtB,SAASkF,GAAT,GAAmC,IAAXtB,EAAU,EAAVA,OACpB,OACI,yBAAKzI,UAAU,YACX,kBAACgK,GAAA,EAAD,CAAO3I,IAAKoH,EAAOlI,IACf,yBAAKP,UAAU,aACX,kBAACgK,GAAA,EAAD,CAAOC,MAAI,GACP,kBAACD,GAAA,EAAD,CAAOE,QAAM,EAACxJ,IAAKT,EAAUwI,EAAO9H,MAAOC,IAAK6H,EAAO5H,SAG/D,yBAAKb,UAAU,SACX,kBAACgK,GAAA,EAAD,CAAOG,MAAI,GACP,kBAACH,GAAA,EAAD,CAAOI,SAAO,GACT3B,EAAO5H,MAEZ,4BAAK4H,EAAOR,YAAZ,KACCQ,EAAOpD,gBAgHjBgF,OAvGf,SAAepJ,GAEX,IA+BMqJ,EAAUrJ,EAAMqJ,QAAQlJ,KAAI,SAACqH,GAC/B,OACI,kBAAC,OAAD,CAAM1D,IAAE,GACJ,kBAACgF,GAAD,CAActB,OAAQA,QAKlC,OACI,yBAAKzI,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAK1B,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAACK,EAAA,EAAD,KACI,kBAACkK,GAAA,EAAD,CAAYvK,UAAU,yBAAtB,qBACA,kBAACmF,EAAA,EAAD,KACI,wBAAInF,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAACK,EAAA,EAAD,KACI,kBAAC8E,EAAA,EAAD,CAAUnF,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAMwK,MAAM,gBAAZ,0EAQpB,yBAAKxK,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UA5FnBiB,EAAMyH,eAEF,yBAAK1I,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPiB,EAAM0H,eAEP,yBAAK3I,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKiB,EAAM0H,kBAQnB,kBAACqB,GAAA,EAAD,CAAOS,MAAI,GACP,kBAAC,UAAD,CAAS1F,IAAE,GACNuF,Q,SCWZlC,GAAgB,iBAAO,CAChC1D,KCpE0B,mBDuEjBgG,GAAe,SAACC,GAAD,MAAc,CACtCjG,KCvEyB,gBDwEzBkG,QAASD,IAGAE,GAAY,SAAC1J,GAAD,MAAa,CAClCuD,KC3EsB,aD4EtBkG,QAASzJ,IA2BA2J,GAAiB,SAACH,GAAD,MAAc,CACxCjG,KCnG2B,kBDoG3BkG,QAASD,IAGAI,GAAc,SAACxF,GAAD,MAAe,CACtCb,KCzGwB,eD0GxBkG,QAASrF,IA8BAyF,GAAgB,iBAAO,CAChCtG,KCtI0B,mBDyIjBuG,GAAe,SAACN,GAAD,MAAc,CACtCjG,KCxIyB,gBDyIzBkG,QAASD,IAGAO,GAAY,SAACC,GAAD,MAAa,CAClCzG,KC9IsB,aD+ItBkG,QAASO,I,SEvHPC,G,kLAGE9I,KAAKrB,MAAMoK,cACX/I,KAAKrB,MAAMqK,gBACXhJ,KAAKrB,MAAMsK,cACXjJ,KAAKrB,MAAMuK,iB,+BAIL,IAAD,OAwCL,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,mBAAD,KACI,kBAAC,iBAAD,CAAenK,IAAKiB,KAAKrB,MAAMwK,SAASpK,IAAKqK,WAAW,OAAOC,QAAS,KACpE,kBAAC,KAAD,CAAQF,SAAUnJ,KAAKrB,MAAMwK,UACzB,kBAAC,KAAD,CAAOG,KAAK,QAAQC,UA5CvB,WACb,OACI,kBAAC,GAAD,CACI1L,KAAM,EAAKc,MAAME,OAAOA,OAAO2K,QAAO,SAAC3L,GAAD,OAAUA,EAAK4L,YAAU,GAC/D3D,cAAe,EAAKnH,MAAME,OAAOG,UACjC0K,YAAa,EAAK/K,MAAME,OAAOI,QAC/B+G,UAAW,EAAKrH,MAAMgL,WAAWA,WAAWH,QAAO,SAACI,GAAD,OAAWA,EAAMH,YAAU,GAC9ExD,aAAc,EAAKtH,MAAMgL,WAAW3K,UACpCkH,aAAc,EAAKvH,MAAMgL,WAAW1K,QACpCkH,OAAQ,EAAKxH,MAAMqJ,QAAQA,QAAQwB,QAAO,SAACrD,GAAD,OAAYA,EAAOsD,YAAU,GACvEpD,eAAgB,EAAK1H,MAAMqJ,QAAQ/I,QACnCmH,eAAgB,EAAKzH,MAAMqJ,QAAQhJ,eAkC3B,kBAAC,KAAD,CAAOsK,KAAK,WAAWC,UAhBjB,WACtB,OACI,kBAAC,GAAD,CAAOvB,QAAS,EAAKrJ,MAAMqJ,QAAQA,QAC/B5B,eAAgB,EAAKzH,MAAMqJ,QAAQhJ,UACnCqH,eAAgB,EAAK1H,MAAMqJ,QAAQ/I,aAa3B,kBAAC,KAAD,CAAO4K,OAAK,EAACP,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAM1K,OAAQ,EAAKF,MAAME,YACpE,kBAAC,KAAD,CAAOyK,KAAK,gBAAgBC,UA/B7B,SAAC,GAAe,IAAbO,EAAY,EAAZA,MAClB,OACI,kBAAC,EAAD,CAAYjM,KAAM,EAAKc,MAAME,OAAOA,OAAO2K,QAAO,SAAC3L,GAAD,OAAUA,EAAKI,KAAO8L,SAASD,EAAME,OAAOvJ,OAAQ,OAAK,GACvGzB,UAAW,EAAKL,MAAME,OAAOG,UAC7BC,QAAS,EAAKN,MAAME,OAAOI,QAC3BgE,SAAU,EAAKtE,MAAMsE,SAASA,SAASuG,QAAO,SAAC5I,GAAD,OAAaA,EAAQH,SAAWsJ,SAASD,EAAME,OAAOvJ,OAAQ,OAC5GwJ,gBAAiB,EAAKtL,MAAMsE,SAAShE,QACrCiL,WAAY,EAAKvL,MAAMuL,WACvB1J,YAAa,EAAK7B,MAAM6B,iBAwBhB,kBAAC,KAAD,CAAOqJ,OAAK,EAACP,KAAK,aAAaC,UAAW,kBACtC,kBAAC,GAAD,CAASnC,kBAAmB,EAAKzI,MAAMyI,kBACnCR,aAAc,EAAKjI,MAAMiI,kBACjC,kBAAC,KAAD,CAAU5I,GAAG,aAIzB,kBAAC,EAAD,W,GAnEGuE,aAyEJ4H,gBAAWC,oBA7FF,SAAAzK,GACpB,MAAO,CACHd,OAAQc,EAAMd,OACdoE,SAAUtD,EAAMsD,SAChB0G,WAAYhK,EAAMgK,WAClB3B,QAASrI,EAAMqI,YAII,SAAAqC,GAAQ,MAAK,CACpC7J,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqCyJ,EFhB3B,SAAC5J,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACyJ,GAE7D,IAAMC,EAAa,CACf7J,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIb,OAFA0J,EAAW5G,MAAO,IAAIF,MAAO+G,cAEtBC,MAAM7M,EAAU,WAAY,CAC/B8M,OAAQ,OACR5C,KAAMxH,KAAKC,UAAUgK,GACrBI,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EApCA,SAACzJ,GAAD,MAAc,CACpCwB,KCCuB,cDAvBkG,QAAS1H,GAkCsBsJ,CAAWW,OACrCO,OAAM,SAAAL,GAAW5K,QAAQC,IAAI,gBAAiB2K,EAAM5D,SAAU5G,MAAM,4CAA8CwK,EAAM5D,aEhBlE3G,CAAYC,EAAQC,EAAQC,EAAQC,KAC/FmI,YAAa,WAAQsB,GFmBQ,SAACA,GAI9B,OAFAA,EAASvE,IAAc,IAEhB0E,MAAM7M,EAAU,UAClBiN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAM5D,YAGrCyD,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA/L,GAAM,OAAIwL,EAAS9B,GAAU1J,OAClCuM,OAAM,SAAAL,GAAK,OAAIV,EAASjC,GAAa2C,EAAM5D,iBEtChDC,kBAAmB,WAAQiD,EAASgB,UAAQC,MAAM,cAClDtC,cAAe,kBAAMqB,GF0DU,SAACA,GAChC,OAAOG,MAAM7M,EAAU,YAClBiN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAM5D,YAGrCyD,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA3H,GAAQ,OAAIoH,EAAS5B,GAAYxF,OACtCmI,OAAM,SAAAL,GAAK,OAAIV,EAAS7B,GAAeuC,EAAM5D,iBE1ElD8B,YAAa,kBAAMoB,GF2FU,SAACA,GAI9B,OAFAA,EAAS3B,MAEF8B,MAAM7M,EAAU,cAClBiN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAM5D,YAGrCyD,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA/B,GAAM,OAAIwB,EAASzB,GAAUC,OAClCuC,OAAM,SAAAL,GAAK,OAAIV,EAAS1B,GAAaoC,EAAM5D,iBE9GhD+B,aAAc,kBAAMmB,GF+IU,SAACA,GAE/B,OADAA,EAfiC,CACjCjI,KCjJ2B,oBDgKpBoI,MAAM7M,EAAU,WAClBiN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEI,MADc,IAAIC,MAAMD,EAAM5D,YAGrCyD,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA5C,GAAO,OAAIqC,EAtBC,SAACrC,GAAD,MAAc,CACpC5F,KC3JuB,cD4JvBkG,QAASN,GAoBqBuD,CAAWvD,OACpCoD,OAAM,SAAAL,GAAK,OAAIV,EA5BmB,CACvCjI,KCpJ0B,iBDqJ1BkG,QA0B2CyC,EAAM5D,iBEhKjDP,aAAc,SAACC,EAAWC,EAAUC,EAAOC,EAAQC,EAAOC,EAAaC,GAAzD,OAAqEkD,EFuK3D,SAACxD,EAAWC,EAAUC,EAAOC,EAAQC,EAAOC,EAAaC,GAAzD,OACxB,SAAAkD,GACI,IAAMmB,EAAc,CAChB3E,UAAWA,EACXC,SAAUA,EACVC,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAGb,OADAqE,EAAY9H,MAAO,IAAIF,MAAO+G,cACvBC,MAAM7M,EAAU,WAAY,CAC/B8M,OAAQ,OACR5C,KAAMxH,KAAKC,UAAUkL,GACrBd,QAAS,CACL,eAAgB,oBAEpBC,YAAa,gBAEZC,MAAK,SAAAa,GACF,GAAIA,EAAIX,GACJ,OAAOW,EAEP,IAAIV,EAAQ,IAAIC,MAAM,SAAWS,EAAIR,OAAS,KAAOQ,EAAIP,YAEzD,MADAH,EAAMF,SAAWY,EACXV,KAGV,SAAAA,GACI,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAa,GAGF,OAFAtL,QAAQC,IAAIqL,GACZlL,MAAMF,KAAKC,UAAUmL,IACdpB,EAxCW,CAC9BjI,KCjLuB,oBD0NdgJ,OAAM,SAAAL,GACH5K,QAAQC,IAAI,gBAAiB2K,EAAM5D,SACnC5G,MAAM,2CAA6CwK,EAAM5D,aE/MuBP,CAAaC,EAAWC,EAAUC,EAAOC,EAAQC,EAAOC,EAAaC,QA6E3IiD,CAA6CtB,K,2BCxG1D4C,GAAS,WAIP,IAJQ/L,EAIT,uDAJiB,CAC3BX,WAAW,EACXC,QAAS,KACTJ,OAAQ,IACT8M,EAAW,uCACV,OAAQA,EAAOvJ,MACX,IFPkB,aEQd,OAAO,gBAAKzC,EAAZ,CAAmBX,WAAW,EAAOC,QAAS,KAAMJ,OAAQ8M,EAAOrD,UAEvE,IFZsB,iBEalB,OAAO,gBAAK3I,EAAZ,CAAmBX,WAAW,EAAMC,QAAS,KAAMJ,OAAQ,KAE/D,IFdqB,gBEejB,OAAO,gBAAKc,EAAZ,CAAmBX,WAAW,EAAOC,QAAS0M,EAAOrD,UAEzD,QACI,OAAO3I,ICANiM,GAAW,WAAsD,IAArDjM,EAAoD,uDAA5C,CAAEV,QAAS,KAAMgE,SAAU,IAAM0I,EAAW,uCACzE,OAAQA,EAAOvJ,MACX,IHfoB,eGgBhB,OAAO,gBAAKzC,EAAZ,CAAmBV,QAAS,KAAMgE,SAAU0I,EAAOrD,UAEvD,IHjBuB,kBGkBnB,OAAO,gBAAK3I,EAAZ,CAAmBV,QAAS0M,EAAOrD,UAEvC,IHtBmB,cGuBf,IAAI1H,EAAU+K,EAAOrD,QAGrB,OAAO,gBAAK3I,EAAZ,CAAmBsD,SAAUtD,EAAMsD,SAAS4I,OAAOjL,KAEvD,QACI,OAAOjB,ICvBNmM,GAAa,WAIX,IAJYnM,EAIb,uDAJqB,CAC/BX,WAAW,EACXC,QAAS,KACT0K,WAAY,IACbgC,EAAW,uCACV,OAAQA,EAAOvJ,MACX,IJPkB,aIQd,OAAO,gBAAKzC,EAAZ,CAAmBX,WAAW,EAAOC,QAAS,KAAM0K,WAAYgC,EAAOrD,UAE3E,IJXsB,iBIYlB,OAAO,gBAAK3I,EAAZ,CAAmBX,WAAW,EAAMC,QAAS,KAAM0K,WAAY,KAEnE,IJZqB,gBIajB,OAAO,gBAAKhK,EAAZ,CAAmBX,WAAW,EAAOC,QAAS0M,EAAOrD,UAEzD,QACI,OAAO3I,IChBNoM,GAAU,WAIR,IAJSpM,EAIV,uDAJkB,CAC5BX,WAAW,EACXC,QAAS,KACT+I,QAAS,IACV2D,EAAW,uCACV,OAAQA,EAAOvJ,MACX,ILJmB,cKKf,OAAO,gBACAzC,EADP,CACcX,WAAW,EAAOC,QAAS,KAAM+I,QAAS2D,EAAOrD,UAEnE,ILPuB,kBKQnB,OAAO,gBACA3I,EADP,CACcX,WAAW,EAAMC,QAAS,KAAM+I,QAAS,KAE3D,ILVsB,iBKWlB,OAAO,gBACArI,EADP,CACcX,WAAW,EAAOC,QAAS0M,EAAOrD,QAASN,QAAS,KAEtE,QACI,OAAOrI,I,6BC9BNqM,GAAkB,CAC3BnF,UAAW,GACXC,SAAU,GACVE,OAAQ,GACRD,MAAO,GACPE,OAAO,EACPC,YAAa,OACbC,QAAS,ICAP8E,GCKYC,uBACVC,2BAAgB,cACZtN,OAAQ6M,GACRzI,SAAU2I,GACVjC,WAAYmC,GACZ9D,QAAS+D,IACNK,sBAAY,CACXC,SAAUL,OAGlBM,2BAAgBC,KAAOC,ODGhBC,G,uKAbX,OACE,kBAAC,YAAD,CAAUR,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAKvO,UAAU,OACb,kBAAC,GAAD,a,GAPM6E,aEGEmK,QACW,cAA7BC,OAAOxD,SAASyD,UAEe,UAA7BD,OAAOxD,SAASyD,UAEhBD,OAAOxD,SAASyD,SAAS9C,MACvB,2DCTN+C,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEdjC,OAAM,SAAAL,GACL5K,QAAQ4K,MAAMA,EAAM5D,a","file":"static/js/main.91a09d09.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","// export const baseUrl = 'http://localhost:3001/';\nexport const baseUrl = 'https://my-json-server.typicode.com/dchunawala/json-server/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({ dish, onClick }) {\n\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                {/* <CardImg width=\"100%\" src={dish.image} alt={dish.name} /> */}\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 mt-1\">\n                <RenderMenuItem dish={dish} />\n            </div >\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, CardTitle, Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nexport class CommentForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({ isModalOpen: !this.state.isModalOpen });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"> Submit Comment</span>\n                </Button>\n\n                <div className=\"row row-content\">\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}> Submit Comment</ModalHeader>\n                        <ModalBody>\n                            <div className=\"col-12\">\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                        <Col md={12}>\n                                            <Control.select model=\".rating\" name=\"rating\" className=\"form-control\" >\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                            </Control.select>\n                                        </Col>\n                                    </Row>\n\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                        <Col md={12}>\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\n                                            <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\n                                        </Col>\n                                    </Row>\n\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"feedback\" md={12}>Comment</Label>\n                                        <Col md={12}>\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" validators={{ required }} />\n                                            <Errors className=\"text-danger\" model=\".message\" show=\"touched\" messages={{ required: 'Required' }} />\n                                        </Col>\n                                    </Row>\n\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                                </LocalForm>\n                            </div>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction RenderDish({ dish }) {\n    if (dish != null) {\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <FadeTransform\n                    in\n                    transformProps={{\n                        exitTransform: 'scale(0.5) translateY(-50%)'\n                    }}>\n                    <Card>\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nfunction RenderComments({ comments, postComment, dishId }) {\n    if (comments == null) {\n        return (\n            <div></div>\n        );\n    }\n\n\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <h4> Comments</h4>\n            <ul className=\"list-unstyled\">\n                <Stagger in>\n                    {comments.map((comment) => {\n                        return (\n                            <Fade in>\n                                <li key={comment.id}>\n                                    <p>{comment.comment}</p>\n                                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\n                                </li>\n                            </Fade>\n                        );\n                    })}\n                </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment} />\n        </div >\n    );\n}\n\n\nconst DishDetail = (props) => {\n    const dish = props.dish\n\n    if (dish == null) {\n        return (\n            <div></div>\n        );\n    } else if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null)\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderDish dish={props.dish} />\n                    <RenderComments comments={props.comments}\n                        postComment={props.postComment}\n                        dishId={props.dish.id} />\n                </div>\n            </div>\n        );\n}\n\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        }\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen,\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen,\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value +\n            \"Password: \" + this.password.value +\n            \"Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact US\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1> Ristorante Con Fusion</h1>\n                                <p> We take inspiration from the World's best cusines, and create a unique experiennce. Our lipsmacking creations will tickle your culinary senses</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div >\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\nfunction RenderCard({ item, isLoading, errMess }) {\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return (\n            <FadeTransform in transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }} >\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n\n        );\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promoLoading}\n                        errMess={props.promoErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Row, Col, Label, Button } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.email, values.telnum, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n        // event.preventDefault();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\" >\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                    <div className=\"row row-content\">\n                        <div className=\"col-12\">\n                            <h3>Location Information</h3>\n                        </div>\n                        <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                                121, Clear Water Bay Road<br />\n                                Clear Water Bay, Kowloon<br />\n                                HONG KONG<br />\n                                <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                                <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                                <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                        </div>\n                        <div className=\"col-12 col-sm-6 offset-sm-1\">\n                            <h5>Map of our Location</h5>\n                        </div>\n                        <div className=\"col-12 col-sm-11 offset-sm-1\">\n                            <div className=\"btn-group\" role=\"group\">\n                                <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                                <a role=\"button\" className=\"btn btn-info\" href=\".\"><i className=\"fa fa-skype\"></i> Skype</a>\n                                <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row row-content\">\n                        <div className=\"col-12\">\n                            <h3>Send us your Feedback</h3>\n                        </div>\n                        <div className=\"col-12 col-md-12\">\n                            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                            placeholder=\"First Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".firstname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                            placeholder=\"Last Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".lastname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                            placeholder=\"Tel. Number\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".telnum\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 numbers',\n                                                maxLength: 'Must be 15 numbers or less',\n                                                isNumber: 'Must be a number'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                            placeholder=\"Email\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, validEmail\n                                            }}\n                                        />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".email\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                validEmail: 'Invalid Email Address'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{ size: 6, offset: 2 }}>\n                                        <div className=\"form-check\">\n                                            <Label check>\n                                                <Control.checkbox model=\".agree\" name=\"agree\"\n                                                    className=\"form-check-input\"\n                                                /> {' '}\n                                                <strong>May we contact you?</strong>\n                                            </Label>\n                                        </div>\n                                    </Col>\n                                    <Col md={{ size: 3, offset: 1 }}>\n                                        <Control.select model=\".contactType\" name=\"contactType\"\n                                            className=\"form-control\">\n                                            <option>Tel.</option>\n                                            <option>Email</option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                    <Col md={10}>\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                            rows=\"12\"\n                                            className=\"form-control\" />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{ size: 10, offset: 2 }}>\n                                        <Button type=\"submit\" color=\"primary\">\n                                            Send Feedback\n                                    </Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { Stagger, Fade } from 'react-animation-components';\nimport { baseUrl } from '../shared/baseUrl'\nfunction RenderLeader({ leader }) {\n    return (\n        <div className=\"row mt-3\">\n            <Media key={leader.id}>\n                <div className=\"col-2 m-1\">\n                    <Media left>\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\n                    </Media>\n                </div>\n                <div className=\"col-8\">\n                    <Media body>\n                        <Media heading>\n                            {leader.name}\n                        </Media>\n                        <h6>{leader.designation} </h6>\n                        {leader.description}\n                    </Media>\n                </div>\n            </Media>\n        </div>\n\n    );\n}\n\nfunction About(props) {\n\n    const hasLeaders = () => {\n        if (props.leadersLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.leadersErrMess) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.leadersErrMess}</h4>\n                    </div>\n                </div>\n\n            );\n        }\n        else {\n            return (\n                <Media list>\n                    <Stagger in>\n                        {leaders}\n                    </Stagger>\n                </Media>\n            );\n        }\n    }\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <Fade in>\n                <RenderLeader leader={leader} />\n            </Fade>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    {hasLeaders()}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;   ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\n};\n\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n\n\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\n\n\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n};\n\nexport const addFeedback = () => ({\n    type: ActionTypes.ADD_FEEDBCK,\n})\n\nexport const postFeedback = (firstname, lastname, email, telnum, agree, contactType, message) =>\n    dispatch => {\n        const newFeedback = {\n            firstname: firstname,\n            lastname: lastname,\n            email: email,\n            telnum: telnum,\n            agree: agree,\n            contactType: contactType,\n            message: message,\n        }\n        newFeedback.date = new Date().toISOString();\n        return fetch(baseUrl + 'feedback', {\n            method: \"POST\",\n            body: JSON.stringify(newFeedback),\n            headers: {\n                \"content-Type\": \"application/json\"\n            },\n            credentials: \"same-origin\"\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res\n                } else {\n                    var error = new Error('Error ' + res.status + ': ' + res.statusText);\n                    error.response = res;\n                    throw error;\n                }\n            },\n                error => {\n                    throw error;\n                })\n            .then(response => response.json())\n            .then(res => {\n                console.log(res);\n                alert(JSON.stringify(res));\n                return dispatch(addFeedback());\n            })\n            .catch(error => {\n                console.log('post feedback', error.message);\n                alert('Your feedback could not be sent\\nError: ' + error.message);\n            });\n    }","export const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\n\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\n\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\n\nexport const ADD_FEEDBCK = \"ADD_FEEDBACK\";","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishDetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport About from './AboutComponenet';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes()) },\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders()),\n    postFeedback: (firstname, lastname, email, telnum, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, email, telnum, agree, contactType, message))\n});\n\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n\n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leadersErrMess={this.props.leaders.errMess}\n                    leadersLoading={this.props.leaders.isLoading}\n                />\n            );\n        }\n\n        const DishWithId = ({ match }) => {\n            return (\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    addComment={this.props.addComment}\n                    postComment={this.props.postComment}\n                />\n            );\n        };\n\n        const AboutwithComments = () => {\n            return (\n                <About leaders={this.props.leaders.leaders}\n                    leadersLoading={this.props.leaders.isLoading}\n                    leadersErrMess={this.props.leaders.errMess}\n                />\n            )\n        }\n\n        return (\n            <div >\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch location={this.props.location}>\n                            <Route path='/home' component={HomePage} />\n                            <Route path=\"/aboutus\" component={AboutwithComments} />\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path='/menu/:dishId' component={DishWithId} />\n                            <Route exact path='/contactus' component={() =>\n                                <Contact resetFeedbackForm={this.props.resetFeedbackForm}\n                                    postFeedback={this.props.postFeedback} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div >\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","// import { DISHES } from '../shared/dishes';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\n\n        case ActionTypes.DISHES_LOADING:\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\n\n        case ActionTypes.DISHES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","// import * as ActionTypes from './ActionTypes';\n// import { COMMENTS } from '../shared/comments';\n\n// export const Comments = (state = COMMENTS, action) => {\n//     switch (action.type) {\n//         case ActionTypes.ADD_COMMENT:\n//             var comment = action.payload;\n//             comment.id = state.length;\n//             comment.date = new Date().toISOString();\n//             console.log(\"Comment: \", comment);\n//             return state.concat(comment);\n\n//         default:\n//             return state;\n//     }\n// };\n\nimport * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, errMess: null, comments: action.payload };\n\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, errMess: action.payload };\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            // comment.id = state.comments.length;\n            // comment.date = new Date().toISOString();\n            return { ...state, comments: state.comments.concat(comment) };\n\n        default:\n            return state;\n    }\n};","// import { PROMOTIONS } from '../shared/promotions';\n\n// export const Promotions = (state = PROMOTIONS, action) => {\n//     switch (action.type) {\n//         default:\n//             return state;\n//     }\n// }\n\nimport * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\n\n        case ActionTypes.PROMOS_LOADING:\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\n\n        case ActionTypes.PROMOS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","// import { LEADERS } from '../shared/leaders';\n\n// export const Leaders = (state = LEADERS, action) => {\n//     switch (action.type) {\n//         default:\n//             return state;\n//     }\n// }\n\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {\n                ...state, isLoading: false, errMess: null, leaders: action.payload\n            }\n        case ActionTypes.LEADERS_LOADING:\n            return {\n                ...state, isLoading: true, errMess: null, leaders: []\n            }\n        case ActionTypes.LEADERS_FAILED:\n            return {\n                ...state, isLoading: false, errMess: action.payload, leaders: []\n            }\n        default:\n            return state;\n    }\n} ","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n\n}\n\nexport default App;\n","// import { Reducer, initialState } from './reducer'\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}